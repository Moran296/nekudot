// Place your key bindings in this file to override the default
[
    {
        "key": "shift+f5",
        "command": "toggleVim"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.navigateDown",
        "command": "workbench.action.terminal.toggleTerminal"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.navigateUp",
        "command": "workbench.action.terminal.toggleTerminal",
        "when": "terminalFocus || editorTextFocus"
    },
    {
        "key": "ctrl+h",
        "command": "workbench.action.focusActivityBar",
        "when": "!editorTextFocus"
    },
    {
        "key": "ctrl+h",
        "command": "workbench.action.navigateLeft",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.navigateRight",
        "when": "sideBarFocus"
    },
    {
        "key": "down",
        "command": "list.focusDown",
        "when": "notebookEditorFocused && !inputFocus"
    },
    {
        "key": "j",
        "command": "-list.focusDown",
        "when": "notebookEditorFocused && !inputFocus"
    },
    {
        "key": "ctrl+j",
        "command": "list.focusDown",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "tab",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "shift+tab",
        "command": "selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+n",
        "command": "settings.cycle",
        "when": "editorTextFocus",
        "args": {
            "id": "relativeLineNumbers",
            "values": [
                {
                    "editor.lineNumbers": "on"
                },
                {
                    "editor.lineNumbers": "relative"
                }
            ]
        }
    },
    {
        "key": "ctrl+shift+s",
        "command": "settings.cycle",
        "when": "editorTextFocus",
        "args": {
            "id": "formatOnSave",
            "values": [
                {
                    "editor.formatOnSave": true
                },
                {
                    "editor.formatOnSave": false
                }
            ]
        }
    },
    //esc in autocomplete menu stay in insert mode
    {
        "key": "escape",
        "command": "-extension.vim_escape",
        "when": "editorTextFocus && vim.active && !inDebugRepl"
    },
    {
        "key": "escape",
        "command": "extension.vim_escape",
        "when": "editorTextFocus && !inDebugRepl && !suggestWidgetVisible"
    },
    //git copilot autocomplete in markdown files
    {
        "key": "tab",
        "command": "markdown.extension.onTabKey",
        "when": "editorTextFocus && !inlineSuggestionVisible && !editorReadonly && !editorTabMovesFocus && !hasOtherSuggestions && !hasSnippetCompletions && !inSnippetMode && !suggestWidgetVisible && editorLangId == 'markdown'"
    },
    {
        "key": "tab",
        "command": "-markdown.extension.onTabKey",
        "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus && !hasOtherSuggestions && !hasSnippetCompletions && !inSnippetMode && !suggestWidgetVisible && editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+p",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "ctrl+g",
        "command": "workbench.action.gotoLine",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+g",
        "command": "-workbench.action.gotoLine"
    },
    {
        "key": "ctrl+g",
        "command": "-workbench.action.terminal.goToRecentDirectory",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+t",
        "command": "-extension.vim_ctrl+t",
        "when": "editorTextFocus && vim.active && vim.use<C-t> && !inDebugRepl"
    },
    {
        "key": "ctrl+t",
        "command": "-workbench.action.showAllSymbols"
    },
    {
        "key": "ctrl+t",
        "command": "workbench.action.showAllEditorsByMostRecentlyUsed"
    },
    {
        "key": "ctrl+shift+p",
        "command": "-workbench.action.showCommands"
    },
    {
        "key": "shift+space",
        "command": "workbench.files.action.collapseExplorerFolders",
        "when": "explorerViewletVisible && explorerViewletFocus"
    },
    {
        "key": "shift+space",
        "command": "search.action.collapseSearchResults",
        "when": "searchViewletVisible && searchViewletFocus"
    },
    {
        "key": "ctrl+j",
        "command": "search.focus.nextInputBox",
        "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible"
    },
    {
        "key": "ctrl+k",
        "command": "search.focus.previousInputBox",
        "when": "searchViewletVisible && searchViewletFocus"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.focusNextGroup",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+alt+=",
        "command": "glassit.decrease"
    },
    {
        "key": "ctrl+alt+-",
        "command": "glassit.increase"
    },
]